## Find required packages

if (PREFER_OPENMPI)
  find_package(MPI QUIET)
  if (NOT MPI_C_FOUND)
    find_package(MPICH QUIET)
  endif (NOT MPI_C_FOUND)
endif (PREFER_OPENMPI)
if (PREFER_MPICH)
  find_package(MPICH QUIET)
  if (NOT MPI_C_FOUND)
    find_package(MPI QUIET)
  endif (NOT MPI_C_FOUND)
endif (PREFER_MPICH)
if (NOT MPI_C_FOUND)
  find_package(MPI QUIET)
  if (NOT MPI_C_FOUND)
    find_package(MPICH QUIET)
  endif (NOT MPI_C_FOUND)
endif (NOT MPI_C_FOUND)

find_package(Parmetis QUIET)
if (MPI_C_INCLUDE_PATH AND MPI_C_LIBRARIES)
  set(MPI_C_FOUND TRUE)
endif (MPI_C_INCLUDE_PATH AND MPI_C_LIBRARIES)

if ( MPI_C_FOUND AND PARMETIS_FOUND )
  set(PARALLEL_BUILD TRUE)
  include_directories(${MPI_C_INCLUDE_PATH} ${PARMETIS_INCLUDE_PATH})
  set(PARALLEL_LIBRARY ${MPI_C_LIBRARIES} ${PARMETIS_LIBRARIES})
endif ( MPI_C_FOUND AND PARMETIS_FOUND )

find_package(GLUT QUIET)
find_package(OpenGL QUIET)

if ( GLUT_FOUND AND OPENGL_GLU_FOUND )
  set(GRAPHICS_BUILD TRUE)
  include_directories(${GLUT_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR})
  set( GRAPHICS_LIBRARY ${GLUT_glut_LIBRARY} ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY})
endif ( GLUT_FOUND AND OPENGL_GLU_FOUND )

set(DYLINK_LIBRARY dl)
set(MATH_LIBRARY m)
if (CMAKE_Fortran_COMPILER_WORKS)
  find_package(LAPACK QUIET)
  find_package(BLAS QUIET)
  if ( BLAS_FOUND )
    set(MATH_LIBRARY ${MATH_LIBRARY} ${BLAS_LIBRARIES})
  endif ( BLAS_FOUND )
  if ( LAPACK_FOUND )
    set(MATH_LIBRARY ${MATH_LIBRARY} ${LAPACK_LIBRARIES})
  endif ( LAPACK_FOUND )
endif (CMAKE_Fortran_COMPILER_WORKS)
