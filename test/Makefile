# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

define gen_src_rule
$(1).o : $(USER_SRC_DIR)/$(1).c $(USER_INC_DIR)/*.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_SRC_DIR)/$(1).c
endef

define gen_prg_rule
$(1).o : $(USER_PRG_DIR)/$(1).c $(USER_INC_DIR)/*.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_PRG_DIR)/$(1).c
endef

CXX = mpicc

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = .

# Where to find user code.
USER_SRC_DIR = ../src
USER_PRG_DIR = ../prog

# Where to find includes
USER_INC_DIR = ../include

# Where to find tests
USER_TEST_DIR = $(GTEST_DIR)

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -mkl -pthread -I$(USER_INC_DIR) -I/share/apps/mvapich2/2.1rc1-intel-15/include -I/share/apps/lib/parmetis/4.0.3/mvapich2-2.1rc1-intel-15/include -I/home/vshakib/LYDG/chemkin/ODEsolver_forXFLOW

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = math_unittest

# Fils to be compiled
SRC_FILES = xf_Math xf_MPI xf_Error xf_MathBlas xf_IO xf_MathLapack xf_Memory
SRC_OBJECTS = xf_Math.o xf_MPI.o xf_Error.o xf_MathBlas.o xf_IO.o xf_MathLapack.o xf_Memory.o
PRG_FILES = 
PRG_OBJECTS = 

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

$(foreach i, $(SRC_FILES), $(eval $(call gen_src_rule,$(i))))
$(foreach i, $(PRG_FILES), $(eval $(call gen_prg_rule,$(i))))

#xf_Math.o : $(USER_SRC_DIR)/xf_Math.c $(USER_INC_DIR)/*.h $(GTEST_HEADERS)
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_SRC_DIR)/xf_Math.c

math_unittest.o : $(USER_TEST_DIR)/math_unittest.cc \
                     $(USER_INC_DIR)/*.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_TEST_DIR)/math_unittest.cc

math_unittest : $(SRC_OBJECTS) $(PRG_OBJECTS) math_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
